---
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import NavWrapper from "@components/NavigationWrapper.astro";
import BlogPost from "@components/BlogPost.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const orderedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
  );

  const uniqueTags = [
    ...new Set(orderedPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = orderedPosts.filter((post) =>
      post.data.tags.includes(tag),
    );
    return {
      params: { tag: encodeURIComponent(tag) },
      props: { posts: filteredPosts, tagLabel: tag },
    };
  });
}

const { tag: tagSlug } = Astro.params;
const { posts, tagLabel } = Astro.props;
const currentTag = tagLabel ?? decodeURIComponent(tagSlug);
const pageTitle = `Tag: ${currentTag}`;
---

<BaseLayout pageTitle={pageTitle}>
  <header>
    <NavWrapper />
  </header>
  <hr />
  <main class="container">
    <section>
      <hgroup>
        <h1>{pageTitle}</h1>
        <p>{posts.length} post{posts.length === 1 ? "" : "s"}</p>
      </hgroup>
    </section>
    <section>
      <ul>
        {
          posts.map((post) => (
            <BlogPost
              url={`/posts/${post.slug}/`}
              title={post.data.title}
              pubDate={post.data.pubDate}
              description={post.data.description}
            />
          ))
        }
      </ul>
    </section>
  </main>
</BaseLayout>
